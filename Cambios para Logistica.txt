Models:

    namespace AplicacionLogistica.Models
    {
      public class ProductoStock
      {
          public int Id { get; set; }
          //public int ProductoId { get; set; }
          public int Cantidad { get; set; }
      }
    }

Controller:

  [Route("api/StockProducto")]
[ApiController]
public class StockProductoController : ControllerBase
{
    private readonly StockProductoContext _context;

    public StockProductoController(StockProductoContext context)
    {
        _context = context;
    }

    // GET: api/StockProducto/5
    [HttpGet("{stockproductoId}")]
    public async Task<ActionResult<StockProducto>> GetStockProducto(int productoId)
    {
        var stock = await _context.StockProductos.FirstOrDefaultAsync(s => s.StockProductoId == productoId);

        if (stock == null)
        {
            return NotFound();
        }

        return stock;
    }

    // PUT: api/StockProducto/5
    [HttpPut("{productoId}")]
    public async Task<IActionResult> PutStockProducto(int productoId, [FromBody] int cantidad)
    {
        var stock = await _context.StockProductos.FirstOrDefaultAsync(s => s.ProductoId == productoId);

        if (stock == null)
        {
            return NotFound();
        }

        stock.Cantidad = cantidad;

        try
        {
            await _context.SaveChangesAsync();
        }
        catch (DbUpdateConcurrencyException)
        {
            if (!StockExists(productoId))
            {
                return NotFound();
            }
            else
            {
                throw;
            }
        }

        return NoContent();
    }

    private bool StockProductoExists(int productoId)
    {
        return _context.StockProductos.Any(e => e.ProductoId == productoId);
    }
}
